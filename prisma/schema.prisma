// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             String    @id @unique
  email          String    @unique
  email_verified Boolean   @default(false)
  name           String
  auth_session   Session[]
  key            Key[]
  role           Role      @default(VIEWER)
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model EmailVerificationToken {
  id      String
  expires BigInt @id
  user_id String

  @@index([user_id])
}

model PasswordResetToken {
  id      String
  expires BigInt @id
  user_id String

  @@index([user_id])
}

enum Role {
  VIEWER
  EDITOR
  ADMIN
  SALES_REP
}

model Customer {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  firstName   String?
  lastName    String?
  companyName String?
  email       String
  phone       String
  address     String
  city        String
  state       String
  zip         String
  country     String    @default("USA")
  trucks      Truck[]
  producer    Producer? @relation(fields: [producerId], references: [id])
  isFleet     Boolean   @default(false)

  // programsEnrolled Program[]
  // lender           Lender[]

  producerId String?

  @@index([lastName])
  @@index([producerId])
}

model Truck {
  id                String                  @id @default(uuid())
  createdAt         DateTime                @default(now())
  year              String
  make              String
  model             String
  vin               String                  @unique
  startMiles        String?
  customers         Customer[]
  currentCustomerId String?
  producerId        String?
  producers         Producer?               @relation(fields: [producerId], references: [id])
  dutyType          DutyType                @default(HEAVY)
  programsEnrolled  TruckProgramsEnrolled[]
  // lender           Lender[]

  @@index([vin])
  @@index([currentCustomerId])
  @@index([producerId])
}

model TruckProgramsEnrolled {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  truckId   String?
  truck     Truck?   @relation(fields: [truckId], references: [id])
  programId String?
  program   Program? @relation(fields: [programId], references: [id])
  isActive  Boolean  @default(true)
  startDate DateTime @default(now())
  endDate   DateTime @default(now())
  price     String   @default("0.00")

  @@index([truckId])
}

enum DutyType {
  MEDIUM
  HEAVY
}

model Producer {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  taxId       String
  companyName String
  dba         String
  address     String
  city        String
  state       String
  zip         String
  country     String   @default("USA")
  website     String

  trucks       Truck[]
  customers    Customer[]
  isMediumDuty Boolean    @default(false)
  isHeavyDuty  Boolean    @default(false)

  producerPersonnel ProducerPersonnel[]
  salesRep          SalesRep?
  // newOrUsed enum NewOrUsed //make enum , can be null

  // ProducerType ProducerType //make enum

  // phone     String
  // email     String
  // contact   String
  // notes     String
  // programsEnrolled Program[]
  // lender           Lender[]

  @@index([companyName])
}

model ProducerPersonnel {
  id               String    @id @default(uuid())
  createdAt        DateTime  @default(now())
  producerId       String?   @unique
  producer         Producer? @relation(fields: [producerId], references: [id])
  name             String
  phone            String
  email            String
  title            String
  isPrimaryContact Boolean   @default(false)
  notes            String

  @@index([producerId])
  @@index([name])
}

model Program {
  id                    String                  @id @default(uuid())
  createdAt             DateTime                @default(now())
  name                  String
  term                  String                  @default("")
  description           String
  TruckProgramsEnrolled TruckProgramsEnrolled[]

  @@index([name])
}

model SalesRep {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  producerId String?   @unique
  producer   Producer? @relation(fields: [producerId], references: [id])
  firstName  String
  lastName   String
  address    String
  city       String
  state      String
  zip        String
  country    String    @default("USA")
  phone      String
  email      String
  company    String
  notes      String

  @@index([producerId])
  @@index([lastName])
}
